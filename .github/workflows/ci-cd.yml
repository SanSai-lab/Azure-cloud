name: CI/CD Pipeline for Azure Key Vault E2E

on:
  push:
    branches:
    - development # Deploy to Dev
    - uat # Deploy to UAT

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build Application
      run: mvn clean package -DskipTests

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure Container Registry Login
      run: az acr login --name ${{ secrets.ACR_NAME }}

    - name: Determine Namespace
      run: |
        SHORT_SHA=$(git rev-parse --short HEAD)
        if [[ "${{ github.ref }}" == "refs/heads/development" ]]; then
          echo "NAMESPACE=poc-dev" >> $GITHUB_ENV
          echo "IMAGE_TAG=$SHORT_SHA" >> $GITHUB_ENV
        elif [[ "${{ github.ref }}" == "refs/heads/uat" ]]; then
          echo "NAMESPACE=poc-uat" >> $GITHUB_ENV
          echo "IMAGE_TAG=$SHORT_SHA" >> $GITHUB_ENV
        fi

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/azure-keyvault-e2e:${{ env.IMAGE_TAG }} .
        docker push ${{ secrets.ACR_NAME }}.azurecr.io/azure-keyvault-e2e:${{ env.IMAGE_TAG }}

    - name: Update FluxCD HelmRelease
      run: |
        git clone https://${{ secrets.GH_PAT }}@github.com/YOUR_ORG/poc-flux-repo.git
        cd poc-flux-repo
        yq eval -i '.spec.values.image.tag = "${{ env.IMAGE_TAG }}"' ./clusters/${{ env.NAMESPACE }}/AzureKeyVault-E2E/helmrelease.yaml
        git config --global user.email "actions@github.com"
        git config --global user.name "github-actions"
        git commit -am "Update image tag for azure-keyvault-e2e to ${{ env.IMAGE_TAG }}"
        git push origin main
